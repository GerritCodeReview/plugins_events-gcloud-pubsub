{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "6c8e50f0_1bdff1bc",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-08-17T00:43:45Z",
      "side": 0,
      "message": "Why has this been removed? We made in this way this plugin completely unusable standalone.\n\nSee Issue 14910",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 19
      },
      "revId": "8fe9b39fed0de43a46ff55ec07d36c237ef14a8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "448b707f_d64e90e6",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1083454
      },
      "writtenOn": "2021-08-17T06:13:27Z",
      "side": 0,
      "message": "We decided that events-* plugins should just transfer messages(they are just brokers) and should not contain any logic or setup any topics and listeners. All that setup should be done by plugins which use events-* plugins to sent events via specific broker(kafka, gcloud, aws). The reason why we did that is that you do not always want to expose stream events when using events-* plugin for example for websession-broker plugin. Maybe the solution to the Issue 14910 would be to create simple plugin which will bind StreamEventPublisher from events-broker library(the generic events publisher) and expose stream events via broker",
      "parentUuid": "6c8e50f0_1bdff1bc",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 19
      },
      "revId": "8fe9b39fed0de43a46ff55ec07d36c237ef14a8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b748da35_4727383c",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-08-17T08:01:44Z",
      "side": 0,
      "message": "\u003e We decided that events-* plugins should just transfer messages(they are just brokers) and should not contain any logic or setup any topics and listeners. \n\nWho should do it then when you use the plugin alone?\n\n\u003e All that setup should be done by plugins which use events-* plugins to sent events via specific broker(kafka, gcloud, aws). \n\nThe events-* plugins are standalone plugins: the *main* use-case is someone installing for instance events-kafka and consume the events on a different system. The main use-case is now broken, therefore Issue 14910 is a P1 (if not a P0 IMHO).\n\n\u003e The reason why we did that is that you do not always want to expose stream events when using events-* plugin for example for websession-broker plugin. Maybe the solution to the Issue 14910 would be to create simple plugin which will bind StreamEventPublisher from events-broker library(the generic events publisher) and expose stream events via broker\n\nNope, because still doesn\u0027t solve the main use-case of the plugins.",
      "parentUuid": "448b707f_d64e90e6",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 19
      },
      "revId": "8fe9b39fed0de43a46ff55ec07d36c237ef14a8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96fdbe02_4bdceceb",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1106305
      },
      "writtenOn": "2021-08-17T08:50:42Z",
      "side": 0,
      "message": "Maybe we could just add a boolean option to the events-* plugins to set whether another plugin is responsible of publishing the events (multi-site for instance) or it should be the events-gcloud-pubsub\u0027s job?\n\nI would revert this change and add the option to hide the code behind the boolean instead of removing it (and do this with the other plugins). What do you think?",
      "parentUuid": "b748da35_4727383c",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 19
      },
      "revId": "8fe9b39fed0de43a46ff55ec07d36c237ef14a8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb39a936_1dacb21b",
        "filename": "src/main/resources/Documentation/config.md",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1006192
      },
      "writtenOn": "2021-08-17T09:58:46Z",
      "side": 0,
      "message": "\u003e Maybe we could just add a boolean option to the events-* plugins to set whether another plugin is responsible of publishing the events (multi-site for instance) \n\nYeah, that\u0027s the plan.",
      "parentUuid": "96fdbe02_4bdceceb",
      "range": {
        "startLine": 46,
        "startChar": 0,
        "endLine": 49,
        "endChar": 19
      },
      "revId": "8fe9b39fed0de43a46ff55ec07d36c237ef14a8c",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153"
    }
  ]
}